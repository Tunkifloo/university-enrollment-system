services:
  postgres:
    image: postgres:16-alpine
    container_name: matriculas-db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: ./Backend/API-matriculas
    container_name: matriculas-backend
    restart: unless-stopped
    env_file: .env
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./Frontend
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    container_name: matriculas-frontend
    restart: unless-stopped
    ports:
      - "${VITE_DEV_PORT}:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge